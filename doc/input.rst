Preparing input files
=====================

How to prepare sample configuration files
----------------------------------------

The sample config file should be tab-delimited and start with headers.
Currently, there are 5 columns, **Sample_Name**, **Mutation_File**, **SJ_File**, **IR_File** and **Weight**.
Splicing junctions in **SJ_File** furnish evidences for *Exon-skipping*, *Alternative 5'SS (splice site)* and *Alternative 3'SS*,
whereas information in **IR_File** constitute evidences for *Intron retention*.
**Sample_Name** and **Mutation_File** is required column.
Either **SJ_File** or **IR_File** need to be specified
(When, e.g., **IR_File** is not specified, SAVNet does not consider mutations associated with *intron retention*).
**Weight** is optional.

When the chromosome names are not chr-prefix (when using Genome Reference Consortium (GRC) genomes such as GRCh37),
add `--grc` option in execution of `savnet` command.


Sample_Name
^^^^^^^^^^^

The field for sample names. This is used for the result file to show which samples have the identified SAVs.


Mutation_File
^^^^^^^^^^^^^

The path to mutation calling data for each sample (on hg19, hg38 or mm10 reference genome).
SAVNet accepts `VCF <https://samtools.github.io/hts-specs/VCFv4.2.pdf>`_ format and
`Annovar input file <http://annovar.openbioinformatics.org/en/latest/user-guide/input/>`_ format.
The format will be discerned by extensions;
when the extension is '.vcf' or '.vcf.gz', then SAVNet will recognize the format as the VCF format.
Otherwise, it will assume the format is Annovar input file.

For the VCF format file, the first 8 mandatory columns (#CHROM, POS, ID, REF, ALT, QUAL, FILTER, INFO) need to be specified.
However, the values of ID, QUAL, FILTER, INFO columns columns are not used and ignored in SAVNet.
We recommend to set ID as '.', QUAL as '60', FILTER as 'PASS' and INFO as 'SOMATIC', respectively.

For the Annovar input file format, only the first five columns (Chr, Start, End, Ref, Alt) are used, and others are ignored.
When some of mutation files in the sample configuration file are in Annovar input file format,
you need to add the path to the reference genome through `--reference` argument.

Lines starting with # are skipped (as comments).

.. note::

  Although SAVNet is developed primarily identifying somatic splicing associated variants (somatic SAVs),
  it can be effectively used for identifying germ-line rare SAVs. However, for germ-line rare SAVs,
  we recommend to filter out common variants (e.g., allele frequencies >= 0.05) beforehand.
  The allele frequencies used in this filtering step can be estimated by public data base
  (e.g., `ExAC <http://exac.broadinstitute.org>`_, `1000 Genomes Project <http://www.internationalgenome.org>`_ and so on)
  as well as your in-house germ-line variant database. The reasons we recommend to adopt this filtering step is as follows:

  * The computational cost will be greatly reduced.
  * Important variants linked to diseases are mostly rare.
  * SAVNet is not extensively tested for extracting common SAVs. For this purpose, other splicing QTL framework may work better.


SJ_File
^^^^^^^

The paths to the splicing junction files (SJ.out.tab) generated by the `STAR <https://github.com/alexdobin/STAR>`_ alignment.
The splicing junctions appearing in SJ.out tab files greatly changes by STAR parameters Â such as `--outSJfilter`.
We currently recommend to use the following parameters (together with other settings such as sorting and thread numbers):

.. code-block:: none

    --outSJfilterCountUniqueMin 1 1 1 1 --outSJfilterCountTotalMin 1 1 1 1 \
    --outSJfilterOverhangMin 12 12 12 12 --outSJfilterDistToOtherSJmin 0 0 0 0 --alignSJstitchMismatchNmax -1 -1 -1 -1

Currently, we use the 1st (chromosome), 2nd (first base of the intron), 3rd (last base of the intron),
6th (annotated or not) and 7th (number of uniquely mapping reads crossing the junction) columns of SJ.out.tab file.
Therefore, when you want to create splicing junction files for SAVNet through other approaches than STAR alignment,
please prepare 9-columns tab file specifying the appropriate values for these columns (1st, 2nd, 3rd, 6th and 7th),
and values for other columns can be set arbitrary.

.. note::

  In the default setting, annotated splicing junction (whose 6th column value is equal to 1) will be removed at an early step.
  Although this procedure help reducing computational cost and improving accuracy,
  there is a risk to remove a small number of genuine cancer specific splicing junctions.
  (The most striking example is the exon 14 skipping of *MET1* gene).
  To avoid this, please specify the `--keep_annotated` argument.


IR_File
^^^^^^^

The paths to the intron retention files generated by `intron_retention_utils <https://github.com/friend1ws/intron_retention_utils>`_
`simple_count` command.
`intron_retention_utils` will be installed through SAVNet installation step.
We current recommend to use the following parameters:

.. code-block:: none

    --intron_retention_check_size 10 --mapping_qual_thres 20


Weight
^^^^^^

This optional field is used for negate the diversity of the numbers of total RNA-seq reads among samples.
We currently recommend to set this as the number of uniquely aligned read pairs (derived from the STAR Log.final.out files) divided by 10^7.
However, we think you can obtain reasonable results without setting column in most cases.



How to prepare pooled control files
-----------------------------------

When either one or both of pooled control files for splicing junctions and intron retentions are specified,
SAVNet removes the splicing variations registered in these files before associating mutations and splicings.
This will greatly help improving the accuracy of SAV calls,
focusing on splicing variations that cannot be observed in normal control samples, as well as reducing the computational cost.
We recommend to specify these parameters using as many samples as possible (hopefully at least >= 10 control samples).


Splicing junction control files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The pooled control file for splicing junction can be generated by `junc_utils <https://github.com/friend1ws/junc_utils>`_
`merge_control` command. We currently recommend to use the following parameters:

.. code-block:: none

    junc_utils merge_control --read_num_thres 2 --keep_annotated --sample_num_thres 1 ${input_list} ${output_file}


The value of `--sample_num_thres` can be tuned for large number of control samples.


Intron retention control files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The pooled control file for intron retention can be generated by `intron_retention_utils <https://github.com/friend1ws/intron_retention_utils>`_ `merge_control` command.
We currently recommend to use the following parameters:

.. code-block:: none

    intron_retention_utils merge_control --sample_num_thres 1 ${input_list} ${output_files}

The value of `--sample_num_thres` can be tuned for large number of control samples.
