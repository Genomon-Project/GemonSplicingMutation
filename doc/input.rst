Preparing input files
=====================

How to prepare sample configration files
----------------------------------------

The sample config file should be tab-delimited and start with headers.
Currently, there are 5 columns, **Sample_Name**, **Mutation_File**, **SJ_File**, **IR_File** and **Weight**.
Splicing junctions in **SJ_File** furnish evidences for *Exon-skipping*, *Alternative 5'SS (splice site)* and *Alternative 3'SS*,
whereas intron retentions in **IR_File** constitute evidences for *Intron retention*
**Sample_Name** and **Mutation_File** is required column.
Either **SJ_File** or **IR_File** need to be specified
(When, e.g., **IR_File** is not specified, SAVNet does not consider mutations associated with *intron retention*).
**Weight** is optional.

Sample_Name
^^^^^^^^^^^

The field for sample names. This is used for the output file to show which samples have the identified SAVs.


Mutation_File
^^^^^^^^^^^^^

The pathes to mutation calling data for each sample (on hg19, hg38 or mm10 reference genome). 
SAVNet accepts `VCF <>`_ format and `Annovar input file <<http://annovar.openbioinformatics.org/en/latest/user-guide/input/>`_ format. For the Annovar input file format, 
only the first five columns (Chr, Start, End, Ref, Alt) are used, and others are ignored.
When the chromosome names are not chr-prefix (when using Genome Reference Consortium (GRC) genomes such as GRCh37), 
add `--grc` option in execution of `savnet` command below.
When some of mutation file are in Annovar input file format, you need to add the path to the reference genome through `--reference` argument. 
Lines starting with # are skipped (as comments).


SJ_File
^^^^^^^

The pathes to the splicing junction files (SJ.out.tab) generated by the `STAR <https://github.com/alexdobin/STAR>`_ alignment.
The splicing junctions appearing in SJ.out tab files greatly changes by STAR parameters Â such as `--outSJfilter`.
We currently recommend to use the following parameters (together with other settings such as sorting and thread numbers):

.. code-block:: none

    --outSJfilterCountUniqueMin 1 1 1 1 --outSJfilterCountTotalMin 1 1 1 1 \
    --outSJfilterOverhangMin 12 12 12 12 --outSJfilterDistToOtherSJmin 0 0 0 0 --alignSJstitchMismatchNmax -1 -1 -1 -1 


IR_File
^^^^^^^

The pathes to the intron retention files generated by `intron_retention_utils <https://github.com/friend1ws/intron_retention_utils>`_
`simple_count` command. 
`intron_retention_utils` will be installed through SAVNet installation step. 
We currenty recommed to use the follwing parameters:

.. code-block:: none

    --intron_retention_check_size 10 --mapping_qual_thres 20


Weight
^^^^^^

This is used for negate the diversity of the numbers of total RNA-seq reads among samples.
Although this field is optional, we think you can obtain reasonable results without setting this.
However, we currently recommend to set this as the number of uniquely aligned read pairs (derived from the STAR Log.final.out files) divided by 10^7.



How to prepare pooled control files
-----------------------------------

When either one or both of pooled control files for splicing junctions and intron retentions are specified, 
SAVNet removes the splicing variations registered in these files before associating mutations and splicings.
This will greatly help improving the accuracy of SAV calls, 
focusing on splicing variations that cannot be observed in normal control samples, as well as reducing the computational cost.
We recommend to specify these parameters using as many samples as possible (hopefully at least >= 10 control samples).


Splicing junction control files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The pooled control file for splicing junction can be generated by `junc_utils` <https://github.com/friend1ws/junc_utils>`_
`merge_control` command. We currently recommend to use the following parameters:

.. code-block:: none

    junc_utils merge_control --read_num_thres 2 --keep_annotated --sample_num_thres 1 ${input_list} ${output_file}


The value of `--sample_num_thres` can be tuned for large number of control samples.


Intron retention control files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The pooled control file for intron retention can be generated by `intron_retention_utils <https://github.com/friend1ws/intron_retention_utils>`_ `merge_control` command.
We currently recommend to use the following parameters:

.. conde-block:: none

    intron_retention_utils merge_control --sample_num_thres 1 ${input_list} ${output_files}

The value of `--sample_num_thres` can be tuned for large number of control samples.




somatic mutation preparation
splicing junction preparation
intron retention preparation
calculating QCs
control

Just download the data
For rare variant analysis, we recommend to filter out common variants (e.g., AF >= 0.05) beforehand,
The allele frequencies used in this filtering step can be by public data base (e.g., ExAC, 1000genome and so on) as well as those by your in-house data.
There is two reasons for this step:

* The computational cost will be greatly reduced.
* Important variants linked to disease are mostly rare.
* SAVNet is not tested very well for extracting common SAVs. For this purpose, other splicing QTL framework may work better.


This will reduce 
